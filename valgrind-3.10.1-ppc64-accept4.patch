commit c79fe53e9e31d5c8e5d2ad3a0943b21e84129ccb
Author: mjw <mjw@a5019735-40e9-0310-863c-91ae7b9d1cf9>
Date:   Tue Feb 10 13:39:04 2015 +0000

    Bug #344007 accept4 syscall unhandled on arm64 (242) and ppc64 (344)
    
    ppc64 might fall back to socketcall in some cases, but arm64 always uses
    accept4 syscall directly. Some (confusing) background on when/how glibc
    (wrongly) decides to use a direct accept4 or the socketcall system call:
    https://sourceware.org/ml/libc-alpha/2013-12/msg00014.html
    
    git-svn-id: svn://svn.valgrind.org/valgrind/trunk@14926 a5019735-40e9-0310-863c-91ae7b9d1cf9

diff --git a/coregrind/m_syswrap/syswrap-ppc64-linux.c b/coregrind/m_syswrap/syswrap-ppc64-linux.c
index 25e0bde..8d5fa08 100644
--- a/coregrind/m_syswrap/syswrap-ppc64-linux.c
+++ b/coregrind/m_syswrap/syswrap-ppc64-linux.c
@@ -1152,6 +1152,8 @@ static SyscallTableEntry syscall_table[] = {
    LINX_(__NR_pwritev,           sys_pwritev),          // 321
    LINXY(__NR_rt_tgsigqueueinfo, sys_rt_tgsigqueueinfo),// 322
 
+   LINXY(__NR_accept4,           sys_accept4),          // 344
+
    LINXY(__NR_clock_adjtime,     sys_clock_adjtime),    // 347
 
    LINXY(__NR_process_vm_readv,  sys_process_vm_readv), // 351
